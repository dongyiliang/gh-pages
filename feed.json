{
    "version": "https://jsonfeed.org/version/1",
    "title": "ADO工具箱",
    "description": "",
    "home_page_url": "https://dongyiliang.github.io/gh-pages",
    "feed_url": "https://dongyiliang.github.io/gh-pages/feed.json",
    "user_comment": "",
    "author": {
        "name": "yiliang.dong"
    },
    "items": [
        {
            "id": "https://dongyiliang.github.io/gh-pages/yin-lue-pei-zhuang.html",
            "url": "https://dongyiliang.github.io/gh-pages/yin-lue-pei-zhuang.html",
            "title": "银掠配装",
            "summary": "建议阵容 建议阵容 (1)芬(2)芬角堂 (1)中路芬 极冷 电池 盾修 舰长:卡琳 (2)边路芬 强袭 主炮 炎龙 舰长:所长/黑医 独角 紫防 盾修 电池 舰长:博士 圣堂 盾修 隐身/静滞 无人机网络 圣堂舰长 公主 独角自动 3阶中和激光炮4 3阶撤甲1 圣堂自动(盾修 隐身 无人机网络) 3阶加农1 3阶撤甲1 2阶撤甲3/(盾修 静滞 无人机网络)3阶撤甲2 3阶加农*1 圣堂",
            "content_html": "<h1 id=\"建议阵容\">建议阵容</h1>\n<p>建议阵容 (1)芬(2)芬角堂<br>(1)中路芬 极冷 电池 盾修 舰长:卡琳\n(2)边路芬 强袭 主炮 炎龙 舰长:所长/黑医\n独角 紫防 盾修 电池 舰长:博士\n圣堂 盾修 隐身/静滞 无人机网络</p>\n<p>圣堂舰长 公主\n独角自动 3阶中和激光炮<em>4 3阶撤甲</em>1\n圣堂自动(盾修 隐身 无人机网络) 3阶加农<em>1 3阶撤甲</em>1 2阶撤甲<em>3/(盾修 静滞 无人机网络)3阶撤甲</em>2 3阶加农*1</p>\n<h1 id=\"不朽\">不朽</h1>\n<p><figure class=\"post__image\"><img loading=\"lazy\" src=\"https://dongyiliang.github.io/gh-pages/media/posts/47/1.jpg\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://dongyiliang.github.io/gh-pages/media/posts/47/responsive/1-xs.jpg 300w ,https://dongyiliang.github.io/gh-pages/media/posts/47/responsive/1-sm.jpg 480w ,https://dongyiliang.github.io/gh-pages/media/posts/47/responsive/1-md.jpg 768w ,https://dongyiliang.github.io/gh-pages/media/posts/47/responsive/1-lg.jpg 1024w ,https://dongyiliang.github.io/gh-pages/media/posts/47/responsive/1-xl.jpg 1360w ,https://dongyiliang.github.io/gh-pages/media/posts/47/responsive/1-2xl.jpg 1600w\"  alt=\"Image description\" width=\"2688\" height=\"1242\" /></figure></p>\n<h1 id=\"圣堂\">圣堂</h1>\n",
            "author": {
                "name": "yiliang.dong"
            },
            "tags": [
                   "银河掠夺者"
            ],
            "date_published": "2022-07-27T11:22:01+08:00",
            "date_modified": "2022-07-27T11:26:49+08:00"
        },
        {
            "id": "https://dongyiliang.github.io/gh-pages/gitqu-chu-ban-ben-kong-zhi-xin-xi.html",
            "url": "https://dongyiliang.github.io/gh-pages/gitqu-chu-ban-ben-kong-zhi-xin-xi.html",
            "title": "git去除版本控制信息",
            "summary": "去除git的版本控制，有两种方式。 1.可以直接将其中的.git文件找出并删除 2.还可以通过命令的方式来操作。如下 你需要先打开项目文件， 然后,在文件中选择git bash here,进入git命令 git会进入当前文件目录， 然后执行如下命令： find . -name “.git” | xargs rm -Rf 该项目就会去除git的版本控制了。再修改的话也不会影响git的版本库。",
            "content_html": "<h3 id=\"去除git的版本控制，有两种方式。\">去除git的版本控制，有两种方式。</h3>\n<p>1.可以直接将其中的.git文件找出并删除</p>\n<p>2.还可以通过命令的方式来操作。如下</p>\n<p>你需要先打开项目文件，</p>\n<p>然后,在文件中选择git bash here,进入git命令</p>\n<p>git会进入当前文件目录，</p>\n<p>然后执行如下命令：</p>\n<p>find . -name “.git” | xargs rm -Rf</p>\n<p>该项目就会去除git的版本控制了。再修改的话也不会影响git的版本库。</p>\n",
            "author": {
                "name": "yiliang.dong"
            },
            "tags": [
                   "git"
            ],
            "date_published": "2022-05-24T17:32:37+08:00",
            "date_modified": "2022-05-24T17:32:37+08:00"
        },
        {
            "id": "https://dongyiliang.github.io/gh-pages/wo-de-shi-jie-pythonhuan-jing.html",
            "url": "https://dongyiliang.github.io/gh-pages/wo-de-shi-jie-pythonhuan-jing.html",
            "title": "我的世界python环境",
            "summary": "python环境 //我的世界python目前只能用2.7版本，不能使用3版本。先激活python27环境 conda activate python27 //补全库 python -m pip install mc-netease-sdk //升级库 python -m pip install --upgrade mc-netease-sdk",
            "content_html": "<h1 id=\"python环境\">python环境</h1>\n<pre><code>//我的世界python目前只能用2.7版本，不能使用3版本。先激活python27环境\nconda activate python27\n\n//补全库\npython -m pip install mc-netease-sdk\n\n//升级库\npython -m pip install --upgrade mc-netease-sdk\n</code></pre>\n",
            "author": {
                "name": "yiliang.dong"
            },
            "tags": [
                   "环境配置",
                   "我的世界",
                   "python"
            ],
            "date_published": "2022-05-22T17:27:23+08:00",
            "date_modified": "2022-05-22T17:27:23+08:00"
        },
        {
            "id": "https://dongyiliang.github.io/gh-pages/python-configparserdu-qu-pei-zhi-wen-jian-chu-xian-configparsermissingsectionheadererror.html",
            "url": "https://dongyiliang.github.io/gh-pages/python-configparserdu-qu-pei-zhi-wen-jian-chu-xian-configparsermissingsectionheadererror.html",
            "title": "【Python】ConfigParser读取配置文件出现ConfigParser.MissingSectionHeaderError",
            "summary": "问题描述 pip安装包显示异常 (python27) D:\\pyspace&gt;python -m pip install mc-netease-sdk Traceback (most recent call last): File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\runpy.py&quot;, line 174, in _run_module_as_main &quot;__main__&quot;, fname, loader, pkg_name) File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\runpy.py&quot;, line 72, in _run_code exec code in run_globals File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\site-packages\\pip\\__main__.py&quot;, line 19, in &lt;module&gt; sys.exit(pip.main()) File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\site-packages\\pip\\__init__.py&quot;, line 233, in&hellip;",
            "content_html": "<h1 id=\"问题描述\">问题描述</h1>\n<p>pip安装包显示异常</p>\n<pre><code>(python27) D:\\pyspace&gt;python -m pip install mc-netease-sdk\nTraceback (most recent call last):\n  File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\runpy.py&quot;, line 174, in _run_module_as_main\n    &quot;__main__&quot;, fname, loader, pkg_name)\n  File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\runpy.py&quot;, line 72, in _run_code\n    exec code in run_globals\n  File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\site-packages\\pip\\__main__.py&quot;, line 19, in &lt;module&gt;\n    sys.exit(pip.main())\n  File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\site-packages\\pip\\__init__.py&quot;, line 233, in main\n    cmd_name, cmd_args = parseopts(args)\n  File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\site-packages\\pip\\__init__.py&quot;, line 159, in parseopts\n    parser = create_main_parser()\n  File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\site-packages\\pip\\__init__.py&quot;, line 137, in create_main_parser\n    parser = ConfigOptionParser(**parser_kw)\n  File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\site-packages\\pip\\baseparser.py&quot;, line 148, in __init__\n    self.config.read(self.files)\n  File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\ConfigParser.py&quot;, line 305, in read\n    self._read(fp, filename)\n  File &quot;D:\\apps\\anaconda3\\envs\\python27\\lib\\ConfigParser.py&quot;, line 512, in _read\n    raise MissingSectionHeaderError(fpname, lineno, line)\nConfigParser.MissingSectionHeaderError: File contains no section headers.\nfile: C:\\Users\\dongyiliang\\pip\\pip.ini, line: 1\n&#39; [global]\\n&#39;\n</code></pre>\n<h1 id=\"问题原因\">问题原因</h1>\n<p>用ConfigParser读取配置文件的程序调用后发现文件头部被追加了信息：\\xef\\xbb\\xbf，然后ConfigParser解析出错\n\\xef\\xbb\\xbf的出现原因：在Window下记事本、notepad++等文本编辑器编辑后，若保存为不同的编码格式会在文件开头加上BOM</p>\n<pre><code>UNICODE： \\xFF\\xFE\nUTF-8：\\xEF\\xBB\\xBF\n</code></pre>\n<h1 id=\"解决方法\">解决方法</h1>\n<p>用notepad++将文件编码修改为以UTF-8无BOM格式编码，然后保存文件就行了。\n<figure class=\"post__image\"><img loading=\"lazy\" src=\"https://dongyiliang.github.io/gh-pages/media/posts/43/20180319103835880.png\" sizes=\"(max-width: 48em) 100vw, 768px\" srcset=\"https://dongyiliang.github.io/gh-pages/media/posts/43/responsive/20180319103835880-xs.png 300w ,https://dongyiliang.github.io/gh-pages/media/posts/43/responsive/20180319103835880-sm.png 480w ,https://dongyiliang.github.io/gh-pages/media/posts/43/responsive/20180319103835880-md.png 768w ,https://dongyiliang.github.io/gh-pages/media/posts/43/responsive/20180319103835880-lg.png 1024w ,https://dongyiliang.github.io/gh-pages/media/posts/43/responsive/20180319103835880-xl.png 1360w ,https://dongyiliang.github.io/gh-pages/media/posts/43/responsive/20180319103835880-2xl.png 1600w\"  alt=\"Image description\" width=\"292\" height=\"283\" /></figure></p>\n<h1 id=\"pipini\">pip.ini</h1>\n<pre><code>[global]\nindex-url = https://pypi.doubanio.com/simple/\n[install]\ntrusted-host=pypi.doubanio.com\n</code></pre>\n",
            "author": {
                "name": "yiliang.dong"
            },
            "tags": [
                   "环境配置",
                   "python"
            ],
            "date_published": "2022-05-22T16:02:42+08:00",
            "date_modified": "2022-05-22T16:18:22+08:00"
        },
        {
            "id": "https://dongyiliang.github.io/gh-pages/flutterguo-nei-jia-su-jing-xiang.html",
            "url": "https://dongyiliang.github.io/gh-pages/flutterguo-nei-jia-su-jing-xiang.html",
            "title": "flutter国内加速镜像",
            "summary": "源码安装 git clone https://github.com/flutter/flutter.git -b stable 下面是国内几个镜像， PUB_HOSTED_URL是Dart依赖包地址 FLUTTER_STORAGE_BASE_URL是Flutter依赖文件地址。 要手动下载最新版本的flutter SDK包，可以访问 FLUTTER_STORAGE_BASE_URL 地址，然后进入/flutter_infra/releases/目录下载（这个方式Flutter社区不可用）。 Flutter 社区 社区主镜像，采用多种方式同步 Flutter 开发者资源（推荐）。 $ export PUB_HOSTED_URL=https://pub.flutter-io.cn $ export FLUTTER_STORAGE_BASE_URL=https://storage.flutter-io.cn 上海交大 Linux 用户组 使用反向代理方式建立的 Flutter 镜像，数据与站源实时同步。 Pub API 返回值未做处理，可能造成无法访问的情况。 $ export PUB_HOSTED_URL=https://dart-pub.mirrors.sjtug.sjtu.edu.cn $ export FLUTTER_STORAGE_BASE_URL=https://mirrors.sjtug.sjtu.edu.cn $ export PUB_HOSTED_URL=https://mirrors.tuna.tsinghua.edu.cn/dart-pub $ export FLUTTER_STORAGE_BASE_URL=https://mirrors.tuna.tsinghua.edu.cn/flutter&hellip;",
            "content_html": "<h3 id=\"源码安装\">源码安装</h3>\n<p>git clone <a href=\"https://github.com/flutter/flutter.git\">https://github.com/flutter/flutter.git</a> -b stable</p>\n<h3 id=\"\"></h3>\n<p>下面是国内几个镜像，\nPUB_HOSTED_URL是Dart依赖包地址\nFLUTTER_STORAGE_BASE_URL是Flutter依赖文件地址。</p>\n<p>要手动下载最新版本的flutter SDK包，可以访问 FLUTTER_STORAGE_BASE_URL 地址，然后进入/flutter_infra/releases/目录下载（这个方式Flutter社区不可用）。</p>\n<ul>\n<li><p>Flutter 社区\n社区主镜像，采用多种方式同步 Flutter 开发者资源（推荐）。\n$ export PUB_HOSTED_URL=<a href=\"https://pub.flutter-io.cn\">https://pub.flutter-io.cn</a>\n$ export FLUTTER_STORAGE_BASE_URL=<a href=\"https://storage.flutter-io.cn\">https://storage.flutter-io.cn</a></p>\n</li>\n<li><p>上海交大 Linux 用户组\n使用反向代理方式建立的 Flutter 镜像，数据与站源实时同步。 Pub API 返回值未做处理，可能造成无法访问的情况。</p>\n</li>\n</ul>\n<p>$ export PUB_HOSTED_URL=<a href=\"https://dart-pub.mirrors.sjtug.sjtu.edu.cn\">https://dart-pub.mirrors.sjtug.sjtu.edu.cn</a>\n$ export FLUTTER_STORAGE_BASE_URL=<a href=\"https://mirrors.sjtug.sjtu.edu.cn\">https://mirrors.sjtug.sjtu.edu.cn</a></p>\n<ul>\n<li>清华大学 TUNA 协会\n定时与 Flutter 社区 Storage 镜像同步，Pub API 采取定时主动抓取策略，镜像配置了完善的失败回源策略（推荐）。</li>\n</ul>\n<p>$ export PUB_HOSTED_URL=<a href=\"https://mirrors.tuna.tsinghua.edu.cn/dart-pub\">https://mirrors.tuna.tsinghua.edu.cn/dart-pub</a>\n$ export FLUTTER_STORAGE_BASE_URL=<a href=\"https://mirrors.tuna.tsinghua.edu.cn/flutter\">https://mirrors.tuna.tsinghua.edu.cn/flutter</a></p>\n<ul>\n<li>CNNIC\n基于 TUNA 协会的镜像服务，数据策略与 TUNA 一致，通过非教育网的域名访问。</li>\n</ul>\n<p>$ export PUB_HOSTED_URL=<a href=\"http://mirrors.cnnic.cn/dart-pub\">http://mirrors.cnnic.cn/dart-pub</a>\n$ export FLUTTER_STORAGE_BASE_URL=<a href=\"http://mirrors.cnnic.cn/flutter\">http://mirrors.cnnic.cn/flutter</a></p>\n<ul>\n<li>腾讯云开源镜像站\n定时（每天凌晨）与 TUNA 协会镜像同步，数据有延迟，访问速度有待反馈。</li>\n</ul>\n<p>$ export PUB_HOSTED_URL=<a href=\"https://mirrors.cloud.tencent.com/dart-pub\">https://mirrors.cloud.tencent.com/dart-pub</a>\n$ export FLUTTER_STORAGE_BASE_URL=<a href=\"https://mirrors.cloud.tencent.com/flutter\">https://mirrors.cloud.tencent.com/flutter</a></p>\n",
            "author": {
                "name": "yiliang.dong"
            },
            "tags": [
                   "flutter"
            ],
            "date_published": "2022-05-14T15:49:12+08:00",
            "date_modified": "2022-05-14T15:49:12+08:00"
        },
        {
            "id": "https://dongyiliang.github.io/gh-pages/githubjia-su.html",
            "url": "https://dongyiliang.github.io/gh-pages/githubjia-su.html",
            "title": "github加速",
            "summary": "加速地址 fastgit.org：https://doc.fastgit.org/ http://cnpmjs.org：https://github.com.cnpmjs.org/ http://gitclone.com：https://gitclone.com/ gitee：https://gitee.com/mirrors GitHub 文件加速：https://gh.api.99988866.xyz/ Github 仓库加速：https://github.zhlh6.cn/ Github 仓库加速：http://toolwa.com/github/ 加速 clone # 方法一：手动替换地址 #原地址 $ git clone https://github.com/kubernetes/kubernetes.git #改为 $ git clone https://github.com.cnpmjs.org/kubernetes/kubernetes.git #或者 $ git clone https://hub.fastgit.org/kubernetes/kubernetes.git #或者 $ git clone https://gitclone.com/github.com/kubernetes/kubernetes.git # 方法二：配置git自动替换 $ git config --global url.&quot;https://hub.fastgit.org&quot;.insteadOf https://github.com # 测试&hellip;",
            "content_html": "<h3 id=\"加速地址\">加速地址</h3>\n<ol>\n<li>fastgit.org：<a href=\"https://doc.fastgit.org/\">https://doc.fastgit.org/</a></li>\n<li><a href=\"http://cnpmjs.org%EF%BC%9Ahttps://github.com.cnpmjs.org/\">http://cnpmjs.org：https://github.com.cnpmjs.org/</a></li>\n<li><a href=\"http://gitclone.com%EF%BC%9Ahttps://gitclone.com/\">http://gitclone.com：https://gitclone.com/</a></li>\n<li>gitee：<a href=\"https://gitee.com/mirrors\">https://gitee.com/mirrors</a></li>\n<li>GitHub 文件加速：<a href=\"https://gh.api.99988866.xyz/\">https://gh.api.99988866.xyz/</a></li>\n<li>Github 仓库加速：<a href=\"https://github.zhlh6.cn/\">https://github.zhlh6.cn/</a></li>\n<li>Github 仓库加速：<a href=\"http://toolwa.com/github/\">http://toolwa.com/github/</a></li>\n</ol>\n<h3 id=\"加速-clone\">加速 clone</h3>\n<pre><code># 方法一：手动替换地址 \n#原地址 \n$ git clone https://github.com/kubernetes/kubernetes.git \n#改为 \n$ git clone https://github.com.cnpmjs.org/kubernetes/kubernetes.git \n#或者 \n$ git clone https://hub.fastgit.org/kubernetes/kubernetes.git \n#或者 \n$ git clone https://gitclone.com/github.com/kubernetes/kubernetes.git \n \n# 方法二：配置git自动替换 \n$ git config --global url.&quot;https://hub.fastgit.org&quot;.insteadOf https://github.com \n# 测试 \n$ git clone https://github.com/kubernetes/kubernetes.git \n# 查看git配置信息 \n$ git config --global --list \n# 取消设置 \n$ git config --global --unset url.https://github.com/.insteadof \n</code></pre>\n<h3 id=\"加速release\">加速release</h3>\n<pre><code># 原地址 \nwget https://github.com/goharbor/harbor/releases/download/v2.0.2/harbor-offline-installer-v2.0.2.tgz \n# 加速下载方法一 \nwget https://download.fastgit.org/goharbor/harbor/releases/download/v2.0.2/harbor-offline-installer-v2.0.2.tgz \n# 加速下载方法二 \nwget https://hub.fastgit.org/goharbor/harbor/releases/download/v2.0.2/harbor-offline-installer-v2.0.2.tgz \n\n//测试1\nhttps://hub.fastgit.org/ipfs-desktop/releases/download/v0.20.6/IPFS-Desktop-Setup-0.20.6.exe\n\nhttps://github.com/ipfs-shipyard/ipfs-desktop/releases/download/v0.20.6/IPFS-Desktop-Setup-0.20.6.exe\n\n</code></pre>\n<h3 id=\"加速-raw\">加速 raw</h3>\n<pre><code># 原地址 \n$ wget https://raw.githubusercontent.com/kubernetes/kubernetes/master/README.md \n# 加速下载方法一 \n$ wget https://raw.staticdn.net/kubernetes/kubernetes/master/README.md \n# 加速下载方法二 \n$ wget https://raw.fastgit.org/kubernetes/kubernetes/master/README.md\n</code></pre>\n",
            "author": {
                "name": "yiliang.dong"
            },
            "tags": [
                   "环境配置",
                   "github"
            ],
            "date_published": "2022-05-14T11:23:28+08:00",
            "date_modified": "2022-05-14T11:42:45+08:00"
        },
        {
            "id": "https://dongyiliang.github.io/gh-pages/cygwinan-zhuang-pei-zhi.html",
            "url": "https://dongyiliang.github.io/gh-pages/cygwinan-zhuang-pei-zhi.html",
            "title": "cygwin安装配置",
            "summary": "为了方便使用windows下的编辑器写代码并使用make命令，所以在windows上也安装make，windows下使用gcc和g++需要安装MinGW32。 https://www.mingw-w64.org/downloads/ http://cygwin.com/install.html",
            "content_html": "<p>为了方便使用windows下的编辑器写代码并使用make命令，所以在windows上也安装make，windows下使用gcc和g++需要安装MinGW32。</p>\n<h3 id=\"下载地址\">下载地址</h3>\n<p><a href=\"https://www.mingw-w64.org/downloads/\">https://www.mingw-w64.org/downloads/</a>\n<a href=\"http://cygwin.com/install.html\">http://cygwin.com/install.html</a></p>\n",
            "author": {
                "name": "yiliang.dong"
            },
            "tags": [
                   "环境配置",
                   "windows"
            ],
            "date_published": "2022-05-14T10:22:16+08:00",
            "date_modified": "2022-05-14T10:22:16+08:00"
        },
        {
            "id": "https://dongyiliang.github.io/gh-pages/cmderkuai-jie-jian.html",
            "url": "https://dongyiliang.github.io/gh-pages/cmderkuai-jie-jian.html",
            "title": "cmder快捷键",
            "summary": "快捷键 Tab #命令补全 Ctrl+T #建立新页 Ctrl+W #关闭标签页 Ctrl+Tab #切换标签页 Alt+F4 #关闭所有标签页 Ctrl+n #切换到第n个页签 Alt + Enter #切换到全屏状态",
            "content_html": "<h3 id=\"快捷键\">快捷键</h3>\n<pre><code>Tab #命令补全\nCtrl+T #建立新页\nCtrl+W #关闭标签页\nCtrl+Tab #切换标签页\nAlt+F4 #关闭所有标签页\nCtrl+n #切换到第n个页签\nAlt + Enter #切换到全屏状态\n</code></pre>\n",
            "author": {
                "name": "yiliang.dong"
            },
            "tags": [
                   "快捷键",
                   "windows"
            ],
            "date_published": "2022-05-12T19:58:14+08:00",
            "date_modified": "2022-05-12T20:07:10+08:00"
        },
        {
            "id": "https://dongyiliang.github.io/gh-pages/pa-wang-zhan-gong-ju.html",
            "url": "https://dongyiliang.github.io/gh-pages/pa-wang-zhan-gong-ju.html",
            "title": "爬网站工具templatespider",
            "summary": "简介 看好哪个网站，指定好URL，自动扒下来做成 html模版。并且所下载的css、js、图片、html文件会自动分好类保存到特定文件夹！ 然后使用 模版计算工具，自动将 html模版计算合成为 网市场云建站系统 可用的模版。 http://www.templatespider.zvo.cn/#rjxz https://gitee.com/mail_osc/templatespider",
            "content_html": "<h3 id=\"简介\">简介</h3>\n<p>看好哪个网站，指定好URL，自动扒下来做成 html模版。并且所下载的css、js、图片、html文件会自动分好类保存到特定文件夹！ 然后使用 模版计算工具，自动将 html模版计算合成为 网市场云建站系统 可用的模版。</p>\n<h3 id=\"下载地址\">下载地址</h3>\n<p><a href=\"http://www.templatespider.zvo.cn/#rjxz\">http://www.templatespider.zvo.cn/#rjxz</a></p>\n<h3 id=\"源码地址\">源码地址</h3>\n<p><a href=\"https://gitee.com/mail_osc/templatespider\">https://gitee.com/mail_osc/templatespider</a></p>\n",
            "author": {
                "name": "yiliang.dong"
            },
            "tags": [
                   "建站工具"
            ],
            "date_published": "2022-05-12T18:00:10+08:00",
            "date_modified": "2022-05-12T18:01:20+08:00"
        },
        {
            "id": "https://dongyiliang.github.io/gh-pages/webview2an-zhuang.html",
            "url": "https://dongyiliang.github.io/gh-pages/webview2an-zhuang.html",
            "title": "webview2安装",
            "summary": "下载地址 https://developer.microsoft.com/zh-cn/microsoft-edge/webview2/ https://msedge.sf.dl.delivery.mp.microsoft.com/filestreamingservice/files/6a0e8a9b-21a9-41ef-8dbd-584d151a0433/MicrosoftEdgeWebView2RuntimeInstallerX64.exe",
            "content_html": "<h3 id=\"下载地址\">下载地址</h3>\n<p><a href=\"https://developer.microsoft.com/zh-cn/microsoft-edge/webview2/\">https://developer.microsoft.com/zh-cn/microsoft-edge/webview2/</a></p>\n<p><a href=\"https://msedge.sf.dl.delivery.mp.microsoft.com/filestreamingservice/files/6a0e8a9b-21a9-41ef-8dbd-584d151a0433/MicrosoftEdgeWebView2RuntimeInstallerX64.exe\">https://msedge.sf.dl.delivery.mp.microsoft.com/filestreamingservice/files/6a0e8a9b-21a9-41ef-8dbd-584d151a0433/MicrosoftEdgeWebView2RuntimeInstallerX64.exe</a></p>\n",
            "author": {
                "name": "yiliang.dong"
            },
            "tags": [
                   "windows"
            ],
            "date_published": "2022-05-12T17:11:19+08:00",
            "date_modified": "2022-05-12T17:11:19+08:00"
        }
    ]
}
